metYears <- readRDS("data/metYears.rds")
# Source helper code ################################################
source("code/extract_keys.R")
file.info("data/rawData.zip")
corn_report <- readRDS("data/corn_report.rds")
soybean_report <- readRDS("data/soybean_report.rds")
knitr::kable(data_frame(Factor =names(cornKey),
Corn = cornKey,
Soybean= c(soybeanKey, NA, NA)),
caption = "Table 1. Factor levels used for the APSIM scenario analysis")
unique(readRDS("data/corn.rds")[,"title"])[1:3]
head(metYears)
met <- read_table("data/Ames.met",skip = 12,col_names = F)
names <- read_lines("data/Ames.met")[11]
names(met) <- unlist(strsplit(names," "))[unlist(strsplit(names," ")) != ""]
met %>%
mutate(date = as.Date(day - 1, origin = paste0(year,"-01-01")),
month = month(date),
temp = (maxt + mint)*0.5,
season = ifelse(month %in% 4:10,"growing","winter")) %>%
filter(year < 2016) %>%
group_by(year, season) %>%
summarise(temp = mean(temp),
rain = sum(rain)) %>%
filter(season == "growing") %>%
select(year,temp,rain) %>%
left_join(metYears) %>%
ggplot(aes(temp,rain)) +
geom_hline(aes(yintercept=median(rain)),linetype = "dotted") +
geom_vline(aes(xintercept=median(temp)),linetype = "dotted") +
geom_text(aes(label=substr(year,3,4), colour=climate)) +
labs(y ="Seasonal precipitation (mm)",
x = "Seasonal average temperature (oC)",
colour = "Classification") +
theme_base()
scenario_generator <- function(inputs){
x <- c()
for(i in 1:length(inputs)) {
idx <- sample(1:length(inputs[[i]]), 1)
x <- c(x,as.character(inputs[[i]][idx]))
}
x <- data.frame(matrix(x,byrow =T,ncol = length(inputs)))
names(x) <- names(inputs)
return(x)
}
multiscenario_random <- function(inputs,n=3){
if(n > 10) stop("Oooops... Too many scenarios!")
scenarios <-  data.frame()
for(i in 1:n){
x <- scenario_generator(inputs)
x$scenario <- paste0(LETTERS[i])
scenarios <- rbind(scenarios,x)
}
return(scenarios)
}
scenarioTable_soy <- multiscenario_random(soybeanKey,4)
knitr::kable(select(scenarioTable_soy, scenario, site:waterTable))
scenarioTable_soy %>%
left_join(data$soybean %>%
inner_join(read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1)) %>%
mutate(mean = mean*convertionFactor + convertionFactor2,
sd = sd*convertionFactor + convertionFactor2)) %>%
ggplot(aes(y=mean, x=scenario)) +
facet_wrap(~paste0(name," (",unitEng,") "), scales = "free",ncol = 3) +
geom_bar(aes(fill=paste(scenario,site,climate,maturity,planting,residualN,previousCrop,waterTable,sep=";")),
stat="identity", colour="black") +
geom_errorbar(aes(ymin = mean-sd, ymax=mean+sd), width=0.3) +
labs(x="",y="",fill="Scenarios:") +
guides(fill=guide_legend(ncol=1, title.position = "top")) +
theme_linedraw() + theme(legend.position="none")
file.info("data/rawData.zip")
rawdata <- "rawdata.zip"
unzip(paste0("data/",rawdata),exdir="data/temp")
base_path <- paste0(gsub(".zip","",paste0("data/temp/",rawdata)),"/corn/")
files <- list.files(base_path)
head(files)
files[1]
library("utils", lib.loc="~/R/R-3.2.0/library")
install.packages(c("APSIM", "apsimr", "BH", "boot", "Cairo", "chron", "class", "cluster", "codetools", "colorspace", "curl", "data.table", "DBI", "deSolve", "digest", "evaluate", "foreign", "gdata", "ggplot2", "ggthemes", "gridExtra", "gss", "gtools", "hms", "htmlwidgets", "ICS", "ICSNP", "jsonlite", "KernSmooth", "knitr", "lattice", "lubridate", "maps", "maptools", "MASS", "Matrix", "memoise", "mgcv", "mime", "munsell", "mvtnorm", "nlme", "nlstools", "nnet", "packrat", "plotrix", "plyr", "proto", "R6", "raster", "Rcpp", "reshape", "reshape2", "rgeos", "rpart", "rsconnect", "RSQLite", "rstudioapi", "scales", "shiny", "sirad", "spatial", "stabledist", "stringi", "stringr", "survey", "survival", "tibble", "XML", "xtable", "yaml"))
out
?saveRDS
read.files("code/")
list.files("code/")
list.files("code/")[1]
list.files("code/")[2]
list.files("code/")[2:3]
data <- readRDS("data/scenarios.rds")
head(data)
scenarioTable_soy <- multiscenario_random(soybeanKey,4)
scenarioTable_soy
soybeanKey
unique(data$soybean$site)
data$soybean$climate
data <- readRDS("data/scenarios.rds")
head(soy)
soybean_report
soy <- readRDS("data/soybean.rds")
as_data_frame(soy)
head(soy)
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears)
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";")
require(tidyverse)
require(lubridate)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";")
View(scenarioTable_soy)
getwd()
soy <- readRDS("data/soybean.rds")
require(tidyverse)
require(lubridate)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
require(dplyr)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
require(tidyr)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
require(lubridate)
install.packages(c("lubridate", "tidyverse"))
require(tidyverse)
require(lubridate)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
library("lubridate", lib.loc="~/R/R-3.2.0/library")
head(metYears)
require(lubridate)
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
require(lubridate)
install.packages('lubridate', dependencies = TRUE)
require(lubridate)
met <- read_table("data/Ames.met",skip = 12,col_names = F)
multiscenario_random(soybeanKey,4)
data <- readRDS("data/scenarios.rds")
soybeanKey <- list(
site = unique(data$soybean$site),
climate = unique(data$soybean$climate),
maturity = unique(data$soybean$maturity),
planting = unique(data$soybean$planting),
residualN = unique(data$soybean$residualN),
previousCrop = unique(data$soybean$previousCrop),
waterTable = unique(data$soybean$waterTable)
)
for(i in 1:length(soybeanKey)) { soybeanKey[[i]] <- as.character(soybeanKey[[i]]) }
cornKey <- list(
site = unique(data$corn$site),
climate = unique(data$corn$climate),
maturity = unique(data$corn$maturity),
planting = unique(data$corn$planting),
residualN = unique(data$corn$residualN),
previousCrop = unique(data$corn$previousCrop),
waterTable = unique(data$corn$waterTable),
Ntime = unique(data$corn$Ntime),
Nrate = unique(data$corn$Nrate)
)
for(i in 1:length(cornKey)) { cornKey[[i]] <- as.character(cornKey[[i]]) }
read_csv("data/dataDictionary_variables.csv")
install.packages("readr")
require(readr)
read_csv("data/dataDictionary_variables.csv")
read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1))$name
(read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1))$name
scenarioTable_soy <- multiscenario_random(soybeanKey,4)
knitr::kable(select(scenarioTable_soy, scenario, site:waterTable),
caption = "Table 2. Scenario analysis Soybeans")
require(lubridate)
getwd
getwd()
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
require(lubridate)
install.packages("lubridate")
require(lubridate)
install.packages("tidyverse")
require(tidyverse)
soy <- readRDS("data/soybean.rds")
metYears <- readRDS("data/metYears.rds")
soy_price <- 10/60/0.454/0.85 # $/kg dm
as_data_frame(soy) %>%
separate(title, c("site","maturity","planting","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(SoyYield = CropYield,
Revenue = soy_price*CropYield,
site = factor(gsub("-Soy","",site)),
maturity = factor(sub("cultivar=Soy_","",maturity)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun","15-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue,SoyYield) %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> soy
corn <- readRDS("data/corn.rds")
metYears <- readRDS("data/metYears.rds")
corn_price <- 4/56/0.454/0.85 # $/kg dm
as_data_frame(corn) %>%
separate(title, c("site","maturity","planting","FallN","SpringN","residualN","previousCrop","waterTable"), sep = ";") %>%
mutate(CornYield = CropYield,
Revenue = corn_price*CropYield,
site = factor(gsub("-Corn","",site)),
maturity = factor(sub("cultivar=Corn_","",maturity)),
FallN = as.numeric(gsub("[^[:digit:]]","",FallN)),
SpringN = as.numeric(gsub("[^[:digit:]]","",SpringN)),
planting = ordered(gsub("date=","",planting), levels= c("15-apr","1-may","15-may","1-jun")),
residualN = factor(as.numeric(gsub("[^[:digit:]]","",residualN))),
previousCrop = factor(gsub("Residue_SOM=SOM","",previousCrop)),
waterTable = factor(as.numeric(gsub("[^[:digit:]]","",waterTable)))) %>%
mutate(Ntime = as.factor(ifelse(SpringN > 0, "UAN injected at planting", ifelse(FallN > 0, "Fall Ammonia", "No fertilizer"))),
Nrate = as.factor(SpringN + FallN))  %>%
group_by(site, maturity, planting, residualN, previousCrop, waterTable, year) %>%
mutate(CornYield0 = sum(ifelse(Ntime == "No fertilizer", CornYield, 0)),
ReturnToN = corn_price*(CornYield - CornYield0)/(as.numeric(as.character(Nrate))),
Ntime = as.factor(ifelse(Ntime %in% c("No fertilizer", "UAN injected at planting"), "UAN injected at planting", "Fall Ammonia"))) %>%
left_join(metYears) %>%
select(-plant_density, -AnnualIrrigation, -Date) %>%
gather("variable","value",AnnualNlossTotal:HarN180, Revenue, CornYield, ReturnToN) %>%
group_by(site, maturity, Ntime, Nrate, planting, residualN, previousCrop, waterTable, climate,variable) %>%
summarise(mean = mean(value, na.rm=T), sd = sd(value,na.rm=T)) %>%
mutate(cv = sd/mean) -> corn
# make a copy of corn Nrate 0
x <- corn[corn$Nrate == 0,]
x$Ntime <- "Fall Ammonia"
corn <- rbind(corn,x)
corn$Ntime <- as.factor(corn$Ntime)
corn_report <- readRDS("data/corn_report.rds")
head(corn_report)
soybean_report <- readRDS("data/soybean_report.rds")
knitr::kable(data_frame(Factor =names(cornKey),
Corn = cornKey,
Soybean= c(soybeanKey, NA, NA)),
caption = "Table 1. Factor levels used for the APSIM scenario analysis")
soybeanKey <- list(
site = unique(data$soybean$site),
climate = unique(data$soybean$climate),
maturity = unique(data$soybean$maturity),
planting = unique(data$soybean$planting),
residualN = unique(data$soybean$residualN),
previousCrop = unique(data$soybean$previousCrop),
waterTable = unique(data$soybean$waterTable)
)
data <- readRDS("data/scenarios.rds")
soybeanKey <- list(
site = unique(data$soybean$site),
climate = unique(data$soybean$climate),
maturity = unique(data$soybean$maturity),
planting = unique(data$soybean$planting),
residualN = unique(data$soybean$residualN),
previousCrop = unique(data$soybean$previousCrop),
waterTable = unique(data$soybean$waterTable)
)
for(i in 1:length(soybeanKey)) { soybeanKey[[i]] <- as.character(soybeanKey[[i]]) }
cornKey <- list(
site = unique(data$corn$site),
climate = unique(data$corn$climate),
maturity = unique(data$corn$maturity),
planting = unique(data$corn$planting),
residualN = unique(data$corn$residualN),
previousCrop = unique(data$corn$previousCrop),
waterTable = unique(data$corn$waterTable),
Ntime = unique(data$corn$Ntime),
Nrate = unique(data$corn$Nrate)
)
corn_report <- readRDS("data/corn_report.rds")
data_frame(Factor =names(cornKey),
Corn = cornKey,
Soybean= c(soybeanKey, NA, NA))
```{r, echo=FALSE, message=TRUE, warning=FALSE}
corn_report <- readRDS("data/corn_report.rds")
soybean_report <- readRDS("data/soybean_report.rds")
knitr::kable(data_frame(Factor =names(cornKey),
Corn = cornKey,
Soybean= c(soybeanKey, NA, NA)),
caption = "Table 1. Factor levels used for the APSIM scenario analysis")
```
scenarioTable_soy <- multiscenario_random(soybeanKey,4)
scenario_generator <- function(inputs){
x <- c()
for(i in 1:length(inputs)) {
idx <- sample(1:length(inputs[[i]]), 1)
x <- c(x,as.character(inputs[[i]][idx]))
}
x <- data.frame(matrix(x,byrow =T,ncol = length(inputs)))
names(x) <- names(inputs)
return(x)
}
multiscenario_random <- function(inputs,n=3){
if(n > 10) stop("Oooops... Too many scenarios!")
scenarios <-  data.frame()
for(i in 1:n){
x <- scenario_generator(inputs)
x$scenario <- paste0(LETTERS[i])
scenarios <- rbind(scenarios,x)
}
return(scenarios)
}
scenarioTable_soy <- multiscenario_random(soybeanKey,4)
scenarioTable_soy %>%
left_join(data$soybean %>%
inner_join(read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1)) %>%
mutate(mean = mean*convertionFactor + convertionFactor2,
sd = sd*convertionFactor + convertionFactor2)) %>%
ggplot(aes(y=mean, x=scenario)) +
facet_wrap(~paste0(name," (",unitEng,") "), scales = "free",ncol = 3) +
geom_bar(aes(fill=paste(scenario,site,climate,maturity,planting,residualN,previousCrop,waterTable,sep=";")),
stat="identity", colour="black") +
geom_errorbar(aes(ymin = mean-sd, ymax=mean+sd), width=0.3) +
labs(x="",y="",fill="Scenarios:") +
guides(fill=guide_legend(ncol=1, title.position = "top")) +
theme_linedraw() + theme(legend.position="none")
source("code/extract_keys.R")
require(tidyverse)
require(ggthemes)
require(lubridate)
scenarioTable_corn %>%
inner_join(data$corn %>%
inner_join(read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1)) %>%
mutate(mean = mean*convertionFactor + convertionFactor2,
sd = sd*convertionFactor + convertionFactor2)) %>%
ggplot(aes(y=mean, x=scenario)) +
facet_wrap(~paste0(name," (",unitEng,") "), scales = "free",ncol =3) +
geom_bar(aes(fill=paste(scenario,site,climate,maturity,planting,Ntime,Nrate,residualN,previousCrop,waterTable,sep="; ")),
stat="identity", colour="black") +
geom_errorbar(aes(ymin = mean-sd, ymax=mean+sd), width=0.3) +
#geom_text(aes(y=1.06*(mean+sd), label=paste0("Â±",round(cv*100),"%"))) +
labs(x="",y="",fill="Scenarios:") +
guides(fill=guide_legend(ncol=1, title.position = "top")) +
theme_linedraw() + theme(legend.position="none")
scenarioTable_corn <- multiscenario_random(cornKey,4)
scenarioTable_corn <- multiscenario_random(cornKey,4)
knitr::kable(select(scenarioTable_corn, scenario, site:Nrate),
caption = "Table 3. Scenario analysis Corn")
scenarioTable_corn %>%
inner_join(data$corn %>%
inner_join(read_csv("data/dataDictionary_variables.csv") %>% filter(userSelect == 1)) %>%
mutate(mean = mean*convertionFactor + convertionFactor2,
sd = sd*convertionFactor + convertionFactor2)) %>%
ggplot(aes(y=mean, x=scenario)) +
facet_wrap(~paste0(name," (",unitEng,") "), scales = "free",ncol =3) +
geom_bar(aes(fill=paste(scenario,site,climate,maturity,planting,Ntime,Nrate,residualN,previousCrop,waterTable,sep="; ")),
stat="identity", colour="black") +
geom_errorbar(aes(ymin = mean-sd, ymax=mean+sd), width=0.3) +
#geom_text(aes(y=1.06*(mean+sd), label=paste0("Â±",round(cv*100),"%"))) +
labs(x="",y="",fill="Scenarios:") +
guides(fill=guide_legend(ncol=1, title.position = "top")) +
theme_linedraw() + theme(legend.position="none")
head(metYears)
corn_report <- readRDS("data/corn_report.rds")
soybean_report <- readRDS("data/soybean_report.rds")
knitr::kable(data_frame(Factor =names(cornKey),
Corn = cornKey,
Soybean= c(soybeanKey, NA, NA)),
caption = "Table 1. Factor levels used for the APSIM scenario analysis")
length(corn_report$title)
length(soybean_report$title)
r paste0( round(length(corn_report$no_years[corn_report$no_years < 36])/length(corn_report$no_years)*100,1),"%"))
paste0( round(length(corn_report$no_years[corn_report$no_years < 36])/length(corn_report$no_years)*100,1),"%"))
paste0( round(length(corn_report$no_years[corn_report$no_years < 36])/length(corn_report$no_years)*100,1),"%")
require(ggthemes)
require(ggthemes)
library(ggthemes)
install.packages("ggthemes")
file.info("data/rawData.zip")
### Examples for creating scenario comparisons
# Load packages #####################################################
library(tidyverse)
library(ggthemes)
library(lubridate)
# Load data #########################################################
data <- readRDS("data/scenarios.rds")
metYears <- readRDS("data/metYears.rds")
# Source helper code ################################################
source("code/extract_keys.R")
